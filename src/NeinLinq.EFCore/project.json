{
  "version": "1.7.1-*",
  "description": "NeinLinq provides helpful extensions for using LINQ providers supporting only a minor subset of .NET functions (like Entity Framework), reusing functions, rewriting queries (even making them null-safe), and building dynamic queries using (translatable) predicates / selectors.",
  "authors": [ "Axel Heer" ],
  "copyright": "Copyright © 2014-2016 Axel Heer",

  "buildOptions": {
    "compile": {
      "exclude": "../NeinLinq/obj",
      "include": "../NeinLinq/**/*.cs"
    },
    "define": [
      "EFCORE"
    ],
    "keyFile": "../NeinLinq/NeinLinq.snk",
    "xmlDoc": true
  },

  "packOptions": {
    "tags": [ "LINQ", "EF" ],
    "projectUrl": "http://github.com/axelheer/nein-linq",
    "licenseUrl": "http://opensource.org/licenses/mit",

    "releaseNotes": "Added support for Interactive Extensions (Ix)."
  },

  "dependencies": {
    "Microsoft.EntityFrameworkCore": "1.0.0"
  },

  "frameworks": {
    "net451": { },
    "netstandard1.3": {
      "dependencies": {
        "System.Collections": "4.3.0",
        "System.Collections.Concurrent": "4.3.0",
        "System.Globalization": "4.3.0",
        "System.Linq": "4.3.0",
        "System.Linq.Expressions": "4.3.0",
        "System.Linq.Queryable": "4.3.0",
        "System.Reflection": "4.3.0",
        "System.Reflection.Extensions": "4.3.0",
        "System.Runtime": "4.3.0",
        "System.Runtime.Extensions": "4.3.0"
      }
    }
  }
}
