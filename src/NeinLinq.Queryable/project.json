{
  "version": "2.0.0-*",
  "description": "NeinLinq provides helpful extensions for using LINQ providers supporting only a minor subset of .NET functions (like Entity Framework), reusing functions, rewriting queries (even making them null-safe), and building dynamic queries using (translatable) predicates / selectors.\r\n\r\nTo support different LINQ implementations, the following flavours are available. Choose at least one.\r\n- Use NeinLinq.Queryable for classic LINQ queries.\r\n- Use NeinLinq.Interactive for interactive LINQ queries.\r\n- Use NeinLinq.EntityFramework for classic Entity Framework LINQ queries.\r\n- Use NeinLinq.EntityFrameworkCore for Entity Framework Core LINQ queries.",
  "authors": [ "Axel Heer" ],
  "copyright": "Copyright © 2014-2016 Axel Heer",

  "buildOptions": {
    "keyFile": "../NeinLinq.snk",
    "xmlDoc": true
  },

  "packOptions": {
    "tags": [ "LINQ", "EF", "IX" ],
    "projectUrl": "http://github.com/axelheer/nein-linq",
    "licenseUrl": "http://opensource.org/licenses/mit",

    "releaseNotes": "Reorganized code to better support different LINQ implementations."
  },

  "dependencies": {
    "NeinLinq": "2.0.0-*"
  },

  "frameworks": {
    "net40": { },
    "netstandard1.0": {
      "dependencies": {
        "System.Linq.Queryable": "4.0.1"
      }
    }
  }
}
